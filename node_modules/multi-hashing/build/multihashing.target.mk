# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := multihashing
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=multihashing' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/include/node \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/src \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/openssl/config \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/openssl/openssl/include \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/uv/include \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/zlib \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/v8/include \
	-I$(srcdir)/src/crypto \
	-I$(srcdir)/../nan

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=multihashing' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/include/node \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/src \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/openssl/config \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/openssl/openssl/include \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/uv/include \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/zlib \
	-I/Users/ruimendes/Library/Caches/node-gyp/12.22.11/deps/v8/include \
	-I$(srcdir)/src/crypto \
	-I$(srcdir)/../nan

OBJS := \
	$(obj).target/$(TARGET)/src/multihashing.o \
	$(obj).target/$(TARGET)/src/bcrypt.o \
	$(obj).target/$(TARGET)/src/blake.o \
	$(obj).target/$(TARGET)/src/boolberry.o \
	$(obj).target/$(TARGET)/src/c11.o \
	$(obj).target/$(TARGET)/src/cryptonight.o \
	$(obj).target/$(TARGET)/src/cryptonight_fast.o \
	$(obj).target/$(TARGET)/src/fresh.o \
	$(obj).target/$(TARGET)/src/fugue.o \
	$(obj).target/$(TARGET)/src/groestl.o \
	$(obj).target/$(TARGET)/src/hefty1.o \
	$(obj).target/$(TARGET)/src/keccak.o \
	$(obj).target/$(TARGET)/src/lbry.o \
	$(obj).target/$(TARGET)/src/lyra2re.o \
	$(obj).target/$(TARGET)/src/lyra2z.o \
	$(obj).target/$(TARGET)/src/nist5.o \
	$(obj).target/$(TARGET)/src/quark.o \
	$(obj).target/$(TARGET)/src/qubit.o \
	$(obj).target/$(TARGET)/src/scryptjane.o \
	$(obj).target/$(TARGET)/src/scryptn.o \
	$(obj).target/$(TARGET)/src/sha1.o \
	$(obj).target/$(TARGET)/src/sha256d.o \
	$(obj).target/$(TARGET)/src/shavite3.o \
	$(obj).target/$(TARGET)/src/skein.o \
	$(obj).target/$(TARGET)/src/x11.o \
	$(obj).target/$(TARGET)/src/x13.o \
	$(obj).target/$(TARGET)/src/x15.o \
	$(obj).target/$(TARGET)/src/x16r.o \
	$(obj).target/$(TARGET)/src/x16rv2.o \
	$(obj).target/$(TARGET)/src/crypto/argon2/argon2.o \
	$(obj).target/$(TARGET)/src/crypto/argon2/core.o \
	$(obj).target/$(TARGET)/src/crypto/argon2/encoding.o \
	$(obj).target/$(TARGET)/src/crypto/argon2/opt.o \
	$(obj).target/$(TARGET)/src/crypto/argon2/thread.o \
	$(obj).target/$(TARGET)/src/crypto/argon2/blake2/blake2b.o \
	$(obj).target/$(TARGET)/src/sha3/sph_hefty1.o \
	$(obj).target/$(TARGET)/src/sha3/sph_fugue.o \
	$(obj).target/$(TARGET)/src/sha3/aes_helper.o \
	$(obj).target/$(TARGET)/src/sha3/sph_blake.o \
	$(obj).target/$(TARGET)/src/sha3/sph_bmw.o \
	$(obj).target/$(TARGET)/src/sha3/sph_cubehash.o \
	$(obj).target/$(TARGET)/src/sha3/sph_echo.o \
	$(obj).target/$(TARGET)/src/sha3/sph_groestl.o \
	$(obj).target/$(TARGET)/src/sha3/sph_jh.o \
	$(obj).target/$(TARGET)/src/sha3/sph_keccak.o \
	$(obj).target/$(TARGET)/src/sha3/sph_luffa.o \
	$(obj).target/$(TARGET)/src/sha3/sph_shavite.o \
	$(obj).target/$(TARGET)/src/sha3/sph_simd.o \
	$(obj).target/$(TARGET)/src/sha3/sph_skein.o \
	$(obj).target/$(TARGET)/src/sha3/sph_whirlpool.o \
	$(obj).target/$(TARGET)/src/sha3/sph_shabal.o \
	$(obj).target/$(TARGET)/src/sha3/sph_ripemd.o \
	$(obj).target/$(TARGET)/src/sha3/sph_sha1.o \
	$(obj).target/$(TARGET)/src/sha3/sph_sha2.o \
	$(obj).target/$(TARGET)/src/sha3/sph_sha2big.o \
	$(obj).target/$(TARGET)/src/sha3/sph_tiger.o \
	$(obj).target/$(TARGET)/src/sha3/hamsi.o \
	$(obj).target/$(TARGET)/src/crypto/lyra2.o \
	$(obj).target/$(TARGET)/src/crypto/sponge.o \
	$(obj).target/$(TARGET)/src/crypto/oaes_lib.o \
	$(obj).target/$(TARGET)/src/crypto/c_keccak.o \
	$(obj).target/$(TARGET)/src/crypto/c_groestl.o \
	$(obj).target/$(TARGET)/src/crypto/c_blake256.o \
	$(obj).target/$(TARGET)/src/crypto/c_jh.o \
	$(obj).target/$(TARGET)/src/crypto/c_skein.o \
	$(obj).target/$(TARGET)/src/crypto/hash.o \
	$(obj).target/$(TARGET)/src/crypto/aesb.o \
	$(obj).target/$(TARGET)/src/crypto/sha256.o \
	$(obj).target/$(TARGET)/src/crypto/wild_keccak.o \
	$(obj).target/$(TARGET)/src/neoscrypt.o \
	$(obj).target/$(TARGET)/src/crypto/yescrypt/yescrypt-best.o \
	$(obj).target/$(TARGET)/src/crypto/yescrypt/yescryptcommon.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS :=

$(builddir)/multihashing.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/multihashing.node: LIBS := $(LIBS)
$(builddir)/multihashing.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/multihashing.node: TOOLSET := $(TOOLSET)
$(builddir)/multihashing.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/multihashing.node
# Add target alias
.PHONY: multihashing
multihashing: $(builddir)/multihashing.node

# Short alias for building this executable.
.PHONY: multihashing.node
multihashing.node: $(builddir)/multihashing.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/multihashing.node

